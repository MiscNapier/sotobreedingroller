// base genes were not listified, see rollGeno() function in rollBreeding.js

// pheno order
const listPhenoOrder = {
  id1: [
    ["freckled", "Fr"],
    ["mitted", "Mt"],
    ["masked", "Msk"],
    ["banded", "Bn"],
    ["capped", "Cp"],
    ["hooded", "Hd"],
    ["collared", "Col"],
    ["bicolored", "Bi"],
    ["sooty", "St"],
    ["colorpointed", "Cpt"],
    ["volcanic", "V"],
  ],
  id2: [
    ["clouded", "Clo"],
    ["shaded", "Shd"],
    ["marbled", "Mb"],
    ["saddled", "Sd"],
    ["doubled", "Db"],
  ],
  idBase: [
    [["red"], "(BB|Bb|bb)\\s(OO|O)"],
    [["red", "black"], "(BB|Bb)\\sOo"],
    [["black"], "(BB|Bb)\\s(oo|o)"],
    [["red", "chocolate"], "bb\\sOo"],
    [["chocolate"], "bb\\s(oo|o)"],
  ],
  id3: [
    // missing
    ["aura", "Au"],
    ["cream", "Cr"],
    // orignal
    ["sheeted", "She"],
    ["sand", "Snd"],
    ["tweed", "Tw"],
    ["agouti", "Ag"],
    ["brindle", "Bri"],
    ["merle", "M"],
    ["seal", "Se"],
    ["blotched-tabby", "BlT"],
    ["braided-tabby", "BrT"],
    ["broken-tabby", "BroT"],
    ["mackerel-tabby", "McT"],
    ["pinstriped-tabby", "PsT"],
    ["smokey-tabby", "SmT"],
    ["speckled-tabby", "SpT"],
    ["spotted-tabby", "SpoT"],
    ["ticked-tabby", "TcT"],
    ["jay", "J"],
    ["wildebeest", "W"],
    ["serval", "Srv"],
    ["skunk", "Sk"],
    ["owl", "Ow"],
    ["peafowl", "Pf"],
    ["quail", "Qu"],
    ["gazelle", "Gz"],
    ["kudu", "Kd"],
    ["caribou", "Car"],
    ["zebra", "Zb"],
    ["pigeon", "Pg"],
    ["cheetah", "Cht"],
    ["panda", "Pnd"],
    ["monarch", "Mon"],
    ["python", "Py"],
    ["tortoise", "To"],
    ["wolf", "Wo"],
    ["tuxedo", "Tx"],
  ],
  id4: [
    ["gradient", "Gra"],
    ["fawn", "Fw"],
    ["shoes", "Sh"],
    ["badger", "Bdg"],
    ["fish-scales", "Sc"],
    ["ocelot", "Oc"],
    ["rosette", "Ros"],
  ],
  id5: [
    ["unders", "Un"],
    ["van", "Vn"],
  ],
};

// pheno exceptions
/**
 * @param {string} gene
 */
// @ts-ignore
function checkGene(gene) {
  return genoString.search(new RegExp(gene)) !== -1;
}

/**
 * @param {string} gene
 */
// @ts-ignore
function checkMut(gene) {
  return offspring.mutations.indexOf(gene) !== -1;
}

const listExceptionsTier1 = {
  black: [
    ["black", checkGene],
    [
      ["aura", "nAu|AuAu", checkGene, "midnight"],
      ["black-fur", "black-fur", checkMut, "eclipse"],
      ["canyon-fur", "canyon-fur", checkMut, "dark-oak"],
      ["feather-fur", "feather-fur", checkMut, "amazon"],
      ["dominant-marbled", "MbMb", checkGene, "cobalt"],
      ["milk-fur", "milk-fur", checkMut, "moonlit"],
      ["dominant-opaline", "OpOp", checkGene, "crow"],
      ["sepia", "nSep|SepSep", checkGene, "raven"],
      ["silvered", "nSlv|SlvSlv", checkGene, "kingsnake"],
      ["sky-fur", "sky-fur", checkMut, "dreary-black"],
      ["cream", "nCr", checkGene, "slate"],
      ["double-cream", "CrCr", checkGene, "silver"],
    ],
  ],
  chocolate: [
    ["chocolate", checkGene],
    [
      ["aura", "nAu|AuAu", checkGene, "dark-chocolate"],
      ["black-fur", "black-fur", checkMut, "obsidian"],
      ["canyon-fur", "canyon-fur", checkMut, "milk-chocolate"],
      ["feather-fur", "feather-fur", checkMut, "dark-olive"],
      ["dominant-marbled", "MbMb", checkGene, "riverbed"],
      ["milk-fur", "milk-fur", checkMut, "cloudy"],
      ["dominant-opaline", "OpOp", checkGene, "falcon"],
      ["sepia", "nSep|SepSep", checkGene, "cocoa"],
      ["silvered", "nSlv|SlvSlv", checkGene, "flea-brown"],
      ["sky-fur", "sky-fur", checkMut, "pit-viper"],
      ["cream", "nCr", checkGene, "foggy"],
      ["double-cream", "CrCr", checkGene, "misty"],
    ],
  ],
  red: [
    ["red", checkGene],
    [
      ["aura", "nAu|AuAu", checkGene, "maple"],
      ["black-fur", "black-fur", checkMut, "deep-canyon"],
      ["canyon-fur", "canyon-fur", checkMut, "fox-red"],
      ["feather-fur", "feather-fur", checkMut, "gold"],
      ["dominant-marbled", "MbMb", checkGene, "charred"],
      ["milk-fur", "milk-fur", checkMut, "ivory"],
      ["dominant-opaline", "OpOp", checkGene, "chipmunk"],
      ["sepia", "nSep|SepSep", checkGene, "hickory"],
      ["silvered", "nSlv|SlvSlv", checkGene, "walnut"],
      ["sky-fur", "sky-fur", checkMut, "twilight"],
      ["cream", "nCr", checkGene, "fossil"],
      ["double-cream", "CrCr", checkGene, "bone"],
    ],
  ],
};

const listExceptionsTier2 = {
  midnight: [
    ["midnight", checkGene],
    [
      ["cream", "nCr", checkGene, "smokey"],
      ["double-cream", "CrCr", checkGene, "stone"],
    ],
  ],
  darkOak: [
    ["dark-oak", checkGene],
    [
      ["cream", "nCr", checkGene, "mud"],
      ["double-cream", "CrCr", checkGene, "coral"],
    ],
  ],
  amazon: [
    ["amazon", checkGene],
    [
      ["cream", "nCr", checkGene, "brush"],
      ["double-cream", "CrCr", checkGene, "ash"],
    ],
  ],
  cobalt: [
    ["cobalt", checkGene],
    [
      ["cream", "nCr", checkGene, "boulder"],
      ["double-cream", "CrCr", checkGene, "platinum"],
    ],
  ],
  crow: [
    ["crow", checkGene],
    [
      ["cream", "nCr", checkGene, "mockingbird"],
      ["double-cream", "CrCr", checkGene, "titmouse"],
    ],
  ],
  raven: [
    ["raven", checkGene],
    [
      ["cream", "nCr", checkGene, "grackle"],
      ["double-cream", "CrCr", checkGene, "rat-snake"],
    ],
  ],
  drearyBlack: [
    ["dreary-black", checkGene],
    [
      ["cream", "nCr", checkGene, "stormy-black"],
      ["double-cream", "CrCr", checkGene, "cloudy-sky"],
    ],
  ],
};

// markings & modifiers
// basic lists
const listMarkings = {
  common: [
    ["bicolored", "Bi"],
    ["braided-tabby", "BrT"],
    ["broken-tabby", "BroT"],
    ["capped", "Cp"],
    ["collared", "Col"],
    ["freckled", "Fr"],
    ["hooded", "Hd"],
    ["mackerel-tabby", "McT"],
    ["masked", "Msk"],
    ["mitted", "Mt"],
    ["pigeon", "Pg"],
    ["seal", "Se"],
    ["sheeted", "She"],
    ["shoes", "Sh"],
    ["ticked-tabby", "TcT"],
    ["tuxedo", "Tx"],
    ["unders", "Un"],
  ],
  uncommon: [
    ["badger", "Bdg"],
    ["banded", "Bn"],
    ["blotched-tabby", "BlT"],
    ["cheetah", "Cht"],
    ["colorpatched", "Cpa"],
    ["fawn", "Fw"],
    ["fish-scales", "Sc"],
    ["jay", "J"],
    ["ocelot", "Oc"],
    ["owl", "Ow"],
    ["panda", "Pnd"],
    ["pinstriped-tabby", "PsT"],
    ["quail", "Qu"],
    ["serval", "Srv"],
    ["skunk", "Sk"],
    ["speckled-tabby", "SpT"],
    ["spotted-tabby", "SpoT"],
    ["van", "Vn"],
  ],
  rare: [
    ["clouded", "Clo"],
    ["gazelle", "Gz"],
    ["kudo", "Kd"],
    ["monarch", "Mon"],
    ["peafowl", "Pf"],
    ["python", "Py"],
    ["rosette", "Ros"],
    ["smokey-tabby", "SmT"],
    ["sooty", "St"],
    ["tortoise", "To"],
    ["tweed", "Tw"],
    ["wildebeest", "W"],
    ["wolf", "Wo"],
    ["zebra", "Zb"],
  ],
  ultraRare: [],
  legendary: [],
};

const listModifiers = {
  common: [
    ["agouti", "Ag"],
    ["colorpointed", "Cpt"],
    ["cream", "Cr"],
    ["gradient", "Gra"],
    ["saddled", "Sd"],
  ],
  uncommon: [
    ["doubled", "Db"],
    ["merle", "M"],
    ["sepia", "Sep"],
    ["shaded", "Shd"],
  ],
  rare: [
    ["brindle", "Bri"],
    ["caribou", "Car"],
    ["marbled", "Mb"],
    ["silvered", "Slv"],
  ],
  ultraRare: [
    ["sand", "Snd"],
    ["volcanic", "V"],
  ],
  legendary: [
    ["aura", "Au"],
    ["opaline", "Op"],
  ],
};

// label listMarkings and listModifiers automatically
for (let [key] of Object.entries(listMarkings)) {
  for (let i = 0; i < listMarkings[key].length; i++) {
    listMarkings[key][i].push("marking");
  }
}
for (let [key] of Object.entries(listModifiers)) {
  for (let i = 0; i < listModifiers[key].length; i++) {
    listModifiers[key][i].push("modifier");
  }
}

// create tabby regex list automatically
/**
 * @param {string} rarity
 */
function getTabby(rarity) {
  let output = [];

  for (let i = 0; i < listMarkings[rarity].length; i++) {
    if (listMarkings[rarity][i][0].search(/tabby/) !== -1) {
      let gene = listMarkings[rarity][i][1];
      output.push(`n${gene}|${gene}${gene}`);
    }
  }

  return output.join("|");
}

const listTabbyRegex = {
  common: getTabby("common"),
  uncommon: getTabby("uncommon"),
  rare: getTabby("rare"),
  ultraRare: getTabby("ultraRare"),
  legendary: getTabby("legendary"),
};

// create modifier regex list automatically
/**
 * @param {string} rarity
 */
function getModifier(rarity) {
  let output = [];

  for (let i = 0; i < listModifiers[rarity].length; i++) {
    if (
      listModifiers[rarity][i][0].search(
        /cream|gradient|saddled|doubled|marbled|silvered|sand|aura|opaline/
      ) === -1
    ) {
      let gene = listModifiers[rarity][i][1];
      output.push(`n${gene}|${gene}${gene}`);
    }
  }

  return output.join("|");
}

const listModifierRegex = {
  common: getModifier("common"),
  uncommon: getModifier("uncommon"),
  rare: getModifier("rare"),
  ultraRare: getModifier("ultraRare"),
  legendary: getModifier("legendary"),
};

// concat and sort listMarkings and listModifiers
const listMarksMods = {
  common: listMarkings.common.concat(listModifiers.common).sort(),
  uncommon: listMarkings.uncommon.concat(listModifiers.uncommon).sort(),
  rare: listMarkings.rare.concat(listModifiers.rare).sort(),
  ultraRare: listMarkings.ultraRare.concat(listModifiers.ultraRare).sort(),
  legendary: listMarkings.legendary.concat(listModifiers.legendary).sort(),
};
// console.log(listMarksMods);

// random mutations & defects
const listRandomMuts = [
  [3, "black-fur"],
  [11, "canyon-fur"],
  [24, "feather-fur"],
  [44, "milk-fur"],
  [
    55,
    rngList(
      [
        [20, "laced-piebaldism"],
        [35, "splashed-piebaldism"],
        [45, "painted-piebaldism"],
        [95, "dusted-piebaldism"],
        [100, "clouded-piebaldism"],
      ],
      100
    ),
  ],
  [58, "sky-fur"],
  [68, "snow-fur"],
  [
    100,
    randomizer([
      "focused-vitiligo",
      "generalized-vitiligo",
      "segmented-vitiligo",
    ]),
  ],
];

const listRandomPhysMuts = [
  [9, "bobbed-tail"],
  [12, "chimerism"],
  [14, "double-eared"],
  [17, "droopy-ears"],
  [19, "elongated-limbs"],
  [22, "elongated-tail"],
  [27, "gigantism"],
  [34, "maned"],
  [50, "overgrown-fur"],
  [70, "tailless"],
  [71, "two-tailed"],
];

const listDefects = [
  [2, "bald-patches"],
  [3, "bird-bones"],
  [8, "blind"],
  [10, "breathing-problems"],
  [11, "clawless"],
  [12, "conjoined"],
  [17, "deaf"],
  [18, "eyeless"],
  [19, "fish-legs"],
  [20, "heart-failure"],
  [22, "immune-disorder"],
  [27, "infertile"],
  [28, "kit-legs"],
  [32, "mute"],
  [34, "nerve-sensitivity"],
  [36, "odd-paws"],
  [37, "one-eye"],
  [42, "overbite/underbite"],
  [47, "overgrown-claws"],
  [52, "overgrown-fangs"],
  [56, "partially-blind"],
  [64, "partially-deaf"],
  [65, "scale-skin"],
  [68, "spinal-deformity"],
  [71, "split-muzzle"],
  [76, "tiny"],
  [77, "toothless"],
  [78, "two-headed"],
  [100, "two-pawed"],
];

// passable mutations
const listPassableMuts = {
  common: [
    "bobbed-tail",
    "maned",
    "milk-fur",
    "overgrown-fur",
    "focused-vitiligo",
    "generalized-vitiligo",
    "segmented-vitiligo",
  ],
  uncommon: [
    "black-fur",
    "droopy-ears",
    "elongated-limbs",
    "elongated-tail",
    "laced-piebaldism",
    "splashed-piebaldism",
    "painted-piebaldism",
    "dusted-piebaldism",
    "clouded-piebaldism",
    "snow-fur",
  ],
  rare: ["canyon-fur", "double-eared", "feather-fur", "gigantism", "tailless"],
  ultraRare: ["chimerism", "sky-fur", "two-tailed"],
  legendary: [],
};

// create fur, piabaldism and vitiligo lists automatically
/**
 * @param {string} rarity
 * @param {string} query
 */
function getGeneFamily(rarity, geneFamily) {
  let output = [];

  for (let i = 0; i < listPassableMuts[rarity].length; i++) {
    let regex = new RegExp(geneFamily, "g");
    if (listPassableMuts[rarity][i].search(regex) !== -1) {
      let gene = listPassableMuts[rarity][i];
      output.push(gene);
    }
  }

  return output.join("|");
}

const listFurRegex = {
  common: getGeneFamily("common", "fur"),
  uncommon: getGeneFamily("uncommon", "fur"),
  rare: getGeneFamily("rare", "fur"),
  ultraRare: getGeneFamily("ultraRare", "fur"),
  legendary: getGeneFamily("legendary", "fur"),
};
const listPiebaldismRegex = {
  common: getGeneFamily("common", "piebaldism"),
  uncommon: getGeneFamily("uncommon", "piebaldism"),
  rare: getGeneFamily("rare", "piebaldism"),
  ultraRare: getGeneFamily("ultraRare", "piebaldism"),
  legendary: getGeneFamily("legendary", "piebaldism"),
};
const listVitiligoRegex = {
  common: getGeneFamily("common", "vitiligo"),
  uncommon: getGeneFamily("uncommon", "vitiligo"),
  rare: getGeneFamily("rare", "vitiligo"),
  ultraRare: getGeneFamily("ultraRare", "vitiligo"),
  legendary: getGeneFamily("legendary", "vitiligo"),
};

// mutation lineage bonuses
const listBonusViperus = [
  "black-fur",
  "elongated-limbs",
  "elongated-tail",
  "gigantism",
  "maned",
  "milk-fur",
  "overgrown-fur",
  "splashed-piebaldism",
  "painted-piebaldism",
  "dusted-piebaldism",
  "clouded-piebaldism",
  "focused-vitiligo",
  "generalized-vitiligo",
  "segmented-vitiligo",
];

const listBonusSkirit = [
  "doubled-eared",
  "droopy-ears",
  "elongated-tail",
  "feather-fur",
  "two-tailed",
];

const listBonusKane = [
  "bobbed-tail",
  "canyon-fur",
  "droopy-ears",
  "maned",
  "milk-fur",
  "tailless",
];

// traits
const listTraits = {
  positive: [
    "accessible",
    "active",
    "adaptable",
    "admirable",
    "adventurous",
    "agreeable",
    "alert",
    "allocentric",
    "amiable",
    "anticipative",
    "appreciative",
    "articulate",
    "aspiring",
    "balanced",
    "benevolent",
    "calm",
    "caring",
    "challenging",
    "charming",
    "cheerful",
    "clean",
    "clear-headed",
    "clever",
    "colorful",
    "companionly",
    "compassionate",
    "conciliatory",
    "confident",
    "conscientious",
    "considerate",
    "constant",
    "cooperative",
    "courageous",
    "courteous",
    "curious",
    "daring",
    "decent",
    "decisive",
    "dedicated",
    "deep",
    "dignified",
    "directed",
    "disciplined",
    "discreet",
    "dramatic",
    "dutiful",
    "dynamic",
    "earnest",
    "ebullient",
    "efficient",
    "empathetic",
    "energetic",
    "enthusiastic",
    "esthetic",
    "exciting",
    "fair",
    "faithful",
    "farsighted",
    "felicific",
    "feminine",
    "firm",
    "flexible",
    "focused",
    "forceful",
    "forgiving",
    "forthright",
    "freethinking",
    "friendly",
    "fun-loving",
    "gallant",
    "generous",
    "gentle",
    "genuine",
    "good-natured",
    "gracious",
    "hardworking",
    "healthy",
    "hearty",
    "helpful",
    "heroic",
    "honest",
    "honorable",
    "humble",
    "humorous",
    "idealistic",
    "impressive",
    "incisive",
    "incorruptible",
    "independent",
    "individualistic",
    "innovative",
    "inoffensive",
    "insightful",
    "insouciant",
    "kind",
    "knowledgeable",
    "leisurely",
    "liberal",
    "logical",
    "lovable",
    "loyal",
    "lyrical",
    "magnanimous",
    "many-sided",
    "masculine",
    "mature",
    "methodical",
    "meticulous",
    "moderate",
    "modest",
    "neat",
    "nonauthoritarian",
    "objective",
    "observant",
    "open",
    "optimistic",
    "orderly",
    "organized",
    "original",
    "painstaking",
    "passionate",
    "patient",
    "patriotic",
    "peaceful",
    "perceptive",
    "perfectionist",
    "personable",
    "planful",
    "playful",
    "polished",
    "practical",
    "precise",
    "principled",
    "protean",
    "protective",
    "providential",
    "prudent",
    "punctual",
    "purposeful",
    "rational",
    "realistic",
    "reflective",
    "relaxed",
    "reliable",
    "resourceful",
    "respectful",
    "responsible",
    "responsive",
    "reverential",
    "romantic",
    "rustic",
    "sage",
    "sane",
    "scrupulous",
    "secure",
    "selfless",
    "self-sufficient",
    "sensitive",
    "sentimental",
    "seraphic",
    "serious",
    "sharing",
    "shrewd",
    "simple",
    "sober",
    "sociable",
    "solid",
    "spontaneous",
    "stoic",
    "strong",
    "studious",
    "suave",
    "subtle",
    "sweet",
    "sympathetic",
    "systematic",
    "tasteful",
    "thorough",
    "tidy",
    "tolerant",
    "tractable",
    "trusting",
    "uncomplaining",
    "understanding",
    "undogmatic",
    "venturesome",
    "vivacious",
    "warm",
    "well-rounded",
    "youthful",
  ],
  neutral: [
    "absentminded",
    "aggressive",
    "ambitious",
    "amusing",
    "artful",
    "ascetic",
    "authoritarian",
    "big-thinking",
    "boyish",
    "breezy",
    "busy",
    "casual",
    "cerebral",
    "chummy",
    "circumspect",
    "competitive",
    "complex",
    "confidential",
    "conservative",
    "contradictory",
    "cute",
    "deceptive",
    "determined",
    "dominating",
    "dreamy",
    "driving",
    "droll",
    "dry",
    "earthy",
    "effeminate",
    "emotional",
    "enigmatic",
    "experimental",
    "familial",
    "folksy",
    "formal",
    "freewheeling",
    "frugal",
    "glamorous",
    "guileless",
    "high-spirited",
    "huried",
    "iconoclastic",
    "idiosyncratic",
    "impassive",
    "impersonal",
    "impressionable",
    "intense",
    "invisible",
    "irreligious",
    "irreverent",
    "mellow",
    "modern",
    "moralistic",
    "neutral",
    "noncommittal",
    "noncompetitive",
    "obedient",
    "old-fashioned",
    "outspoken",
    "physical",
    "placid",
    "political",
    "predictable",
    "preoccupied",
    "private",
    "proud",
    "pure",
    "questioning",
    "quiet",
    "religious",
    "reserved",
    "restrained",
    "retiring",
    "sarcastic",
    "self-conscious",
    "sensual",
    "skeptical",
    "smooth",
    "soft",
    "solemn",
    "solitary",
    "stern",
    "stolid",
    "strict",
    "stubborn",
    "stylish",
    "subjective",
    "surprising",
    "soft",
    "unaggressive",
    "unambitious",
    "unceremonious",
    "unchanging",
    "undemanding",
    "unhurried",
    "uninhibited",
    "unpatriotic",
    "unpredictable",
    "unreligious",
    "unsentimental",
    "whimsical",
  ],
  negative: [
    "abrasive",
    "antagonizing",
    "aimless",
    "airy",
    "aloof",
    "amoral",
    "angry",
    "anxious",
    "apathetic",
    "arbitrary",
    "argumentative",
    "arrogant",
    "artificial",
    "asocial",
    "assertive",
    "astigmatic",
    "barbaric",
    "bewildered",
    "bizarre",
    "bland",
    "blunt",
    "boisterous",
    "brittle",
    "brutal",
    "calculating",
    "callous",
    "cantankerous",
    "careless",
    "cautious",
    "charmless",
    "childish",
    "clumsy",
    "coarse",
    "cold",
    "colorless",
    "complacent",
    "complainant",
    "compulsive",
    "conceited",
    "condemnatory",
    "conformist",
    "confused",
    "contemptible",
    "conventional",
    "cowardly",
    "crafty",
    "crass",
    "crazy",
    "criminal",
    "critical",
    "crude",
    "cruel",
    "cynical",
    "decadent",
    "deceitful",
    "delicate",
    "demanding",
    "dependent",
    "desperate",
    "destructive",
    "devious",
    "difficult",
    "disconcerting",
    "discontented",
    "discouraging",
    "discourteous",
    "dishonest",
    "disloyal",
    "disobedient",
    "disorderly",
    "disorganized",
    "disputatious",
    "disrespectful",
    "disruptive",
    "dissolute",
    "dissonant",
    "distractible",
    "disturbing",
    "dogmatic",
    "domineering",
    "dull",
    "easily discouraged",
    "egocentric",
    "enervated",
    "envious",
    "erratic",
    "escapist",
    "excitable",
    "expedient",
    "extravagant",
    "extreme",
    "faithless",
    "false",
    "fanatical",
    "fanciful",
    "fatalistic",
    "fawning",
    "fearful",
    "fickle",
    "fiery",
    "fixed",
    "flamboyant",
    "foolish",
    "forgetful",
    "fraudulent",
    "frightening",
    "frivolous",
    "gloomy",
    "graceless",
    "grand",
    "greedy",
    "grim",
    "gullible",
    "hateful",
    "haughty",
    "hedonistic",
    "hesitant",
    "hidebound",
    "high-handed",
    "hostile",
    "ignorant",
    "imitative",
    "impatient",
    "impractical",
    "imprudent",
    "impulsive",
    "inconsiderate",
    "incurious",
    "indecisive",
    "indulgent",
    "inert",
    "inhibited",
    "insecure",
    "insensitive",
    "insincere",
    "insulting",
    "intolerant",
    "irascible",
    "irrational",
    "irresponsible",
    "irritable",
    "lazy",
    "libidinous",
    "loquacious",
    "malicious",
    "mannered",
    "mannerless",
    "mawkish",
    "mealy-mouthed",
    "mechanical",
    "meddlesome",
    "melancholic",
    "meretricious",
    "messy",
    "miserable",
    "miserly",
    "misguided",
    "mistaken",
    "monstrous",
    "moody",
    "morbid",
    "muddle-headed",
    "naive",
    "narcissistic",
    "narrow",
    "narrow-minded",
    "negativistic",
    "neglectful",
    "neurotic",
    "nihilistic",
    "obnoxious",
    "obsessive",
    "obvious",
    "odd",
    "offhand",
    "one-dimensional",
    "one-sided",
    "opinionated",
    "opportunistic",
    "oppressed",
    "outrageous",
    "overimaginative",
    "paranoid",
    "passive",
    "pedantic",
    "perverse",
    "petty",
    "pharisaical",
    "phlegmatic",
    "plodding",
    "pompous",
    "possessive",
    "power-hungry",
    "predatory",
    "prejudiced",
    "presumptuous",
    "pretentious",
    "prim",
    "procrastinating",
    "profligate",
    "provocative",
    "pugnacious",
    "puritanical",
    "quirky",
    "reactionary",
    "reactive",
    "regimental",
    "regretful",
    "repentant",
    "repressed",
    "resentful",
    "ridiculous",
    "rigid",
    "ritualistic",
    "rowdy",
    "ruined",
    "sadistic",
    "sanctimonious",
    "scheming",
    "scornful",
    "secretive",
    "sedentary",
    "selfish",
    "self-indulgent",
    "shallow",
    "shortsighted",
    "shy",
    "silly",
    "single-minded",
    "sloppy",
    "slow",
    "sly",
    "small-thinking",
    "softheaded",
    "sordid",
    "steely",
    "stiff",
    "strong-willed",
    "stupid",
    "submissive",
    "superficial",
    "superstitious",
    "suspicious",
    "tactless",
    "tasteless",
    "tense",
    "thievish",
    "thoughtless",
    "timid",
    "transparent",
    "treacherous",
    "trendy",
    "troublesome",
    "unappreciative",
    "uncaring",
    "uncharitable",
    "unconvincing",
    "uncooperative",
    "uncreative",
    "uncritical",
    "unctuous",
    "undisciplined",
    "unfriendly",
    "ungrateful",
    "unhealthy",
    "unimaginative",
    "unimpressive",
    "unlovable",
    "unpolished",
    "unprincipled",
    "unrealistic",
    "unreflective",
    "unreliable",
    "unrestrained",
    "unself-critical",
    "unstable",
    "vacuous",
    "vague",
    "venal",
    "venomous",
    "vindictive",
    "vulnerable",
    "weak",
    "weak-willed",
    "well-meaning",
    "willful",
    "wishful",
    "zany",
  ],
};
